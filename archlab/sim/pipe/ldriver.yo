                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f44808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6c805000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7c003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: c0f2f7ffffffffffffff |     iaddq $-9,%rdx       #length - 6 
0x03c: 72dd01000000000000   | 	jl end		# limit < 0? if so, goto end:
0x045:                      | Loop:	
                            | # read val from src...
0x045: 50170000000000000000 |     mrmovq (%rdi),   %rcx	
0x04f: 50870800000000000000 |     mrmovq 8(%rdi),  %r8
0x059: 50971000000000000000 |     mrmovq 16(%rdi), %r9
0x063: 50a71800000000000000 |     mrmovq 24(%rdi), %r10
0x06d: 50b72000000000000000 |     mrmovq 32(%rdi), %r11
0x077: 50c72800000000000000 |     mrmovq 40(%rdi), %r12 
0x081: 50d73000000000000000 |     mrmovq 48(%rdi), %r13 
0x08b: 50e73800000000000000 |     mrmovq 56(%rdi), %r14 
0x095: 50374000000000000000 |     mrmovq 64(%rdi), %rbx  
                            | 
                            | # ...and store it to dst
0x09f: 40160000000000000000 |     rmmovq %rcx, (%rsi)
0x0a9: 40860800000000000000 |     rmmovq %r8, 8(%rsi)
0x0b3: 40961000000000000000 |     rmmovq %r9, 16(%rsi)
0x0bd: 40a61800000000000000 |     rmmovq %r10, 24(%rsi)
0x0c7: 40b62000000000000000 |     rmmovq %r11, 32(%rsi)
0x0d1: 40c62800000000000000 |     rmmovq %r12, 40(%rsi)
0x0db: 40d63000000000000000 |     rmmovq %r13, 48(%rsi)
0x0e5: 40e63800000000000000 |     rmmovq %r14, 56(%rsi)
0x0ef: 40364000000000000000 |     rmmovq %rbx, 64(%rsi)
                            | 
                            | 
0x0f9: 6211                 |     andq %rcx,%rcx
0x0fb: 710e01000000000000   | 	jle notInc1
0x104: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x10e:                      | notInc1:
0x10e: 6288                 |     andq %r8,%r8
0x110: 712301000000000000   | 	jle notInc2
0x119: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x123:                      | notInc2:
0x123: 6299                 |     andq %r9,%r9
0x125: 713801000000000000   | 	jle notInc3
0x12e: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x138:                      | notInc3:
0x138: 62aa                 |     andq %r10,%r10
0x13a: 714d01000000000000   | 	jle notInc4
0x143: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x14d:                      | notInc4:
0x14d: 62bb                 |     andq %r11,%r11 # val <= 0?
0x14f: 716201000000000000   | 	jle notInc5
0x158: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x162:                      | notInc5:
0x162: 62cc                 |     andq %r12,%r12 # val <= 0?
0x164: 717701000000000000   | 	jle notInc6
0x16d: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x177:                      | notInc6:
0x177: 62dd                 |     andq %r13,%r13 # val <= 0?
0x179: 718c01000000000000   | 	jle notInc7
0x182: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x18c:                      | notInc7:
0x18c: 62ee                 |     andq %r14,%r14 # val <= 0?
0x18e: 71a101000000000000   | 	jle notInc8
0x197: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x1a1:                      | notInc8:
0x1a1: 6233                 |     andq %rbx,%rbx # val <= 0?
0x1a3: 71b601000000000000   | 	jle notInc9
0x1ac: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
0x1b6:                      | notInc9:
0x1b6: c0f74800000000000000 | 	iaddq $72, %rdi		# src+=6
0x1c0: c0f64800000000000000 | 	iaddq $72, %rsi		# dst+=6
0x1ca: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx		# len-=6 # len >= 0?
0x1d4: 754500000000000000   | 	jge Loop			# if so, goto Loop:
                            | 
0x1dd:                      | end:
0x1dd: c0f20900000000000000 |     iaddq $9,%rdx
0x1e7: 73bd03000000000000   |     je Done
                            | 
                            | #1
0x1f0: 50170000000000000000 |     mrmovq (%rdi), %rcx
0x1fa: 40160000000000000000 |     rmmovq %rcx, (%rsi)
0x204: 6211                 |     andq %rcx,%rcx # val <= 0?
0x206: 711902000000000000   | 	jle notIncx9
0x20f: c0f00100000000000000 | 	iaddq $1,%rax
0x219:                      | notIncx9:
0x219: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x223: 73bd03000000000000   |     je Done
                            | #2
0x22c: 50870800000000000000 |     mrmovq 8(%rdi), %r8
0x236: 40860800000000000000 |     rmmovq %r8, 8(%rsi)
0x240: 6288                 |     andq %r8,%r8
0x242: 715502000000000000   | 	jle notIncx10
0x24b: c0f00100000000000000 | 	iaddq $1,%rax
0x255:                      | notIncx10:
                            | 
                            | # ...and store it to dst
0x255: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x25f: 73bd03000000000000   |     je Done
                            | 
                            | #3
0x268: 50971000000000000000 |     mrmovq 16(%rdi), %r9
0x272: 40961000000000000000 |     rmmovq %r9, 16(%rsi)
0x27c: 6299                 |     andq %r9,%r9
0x27e: 719102000000000000   | 	jle notIncx11
0x287: c0f00100000000000000 | 	iaddq $1,%rax
0x291:                      | notIncx11:
0x291: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x29b: 73bd03000000000000   |     je Done
                            | #4
0x2a4: 50a71800000000000000 |     mrmovq 24(%rdi), %r10
0x2ae: 40a61800000000000000 |     rmmovq %r10, 24(%rsi)
0x2b8: 62aa                 |     andq %r10,%r10
0x2ba: 71cd02000000000000   | 	jle notIncx12
0x2c3: c0f00100000000000000 | 	iaddq $1,%rax
0x2cd:                      | notIncx12:
                            | #5
0x2cd: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x2d7: 73bd03000000000000   |     je Done
0x2e0: 50172000000000000000 |     mrmovq 32(%rdi), %rcx	
0x2ea: 40162000000000000000 |     rmmovq %rcx, 32(%rsi)
0x2f4: 6211                 |     andq %rcx,%rcx
0x2f6: 710903000000000000   |     jle notIncx13
0x2ff: c0f00100000000000000 |     iaddq $1,%rax
0x309:                      | notIncx13:
                            | #6
0x309: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x313: 73bd03000000000000   |     je Done
0x31c: 50172800000000000000 |     mrmovq 40(%rdi), %rcx	
0x326: 40162800000000000000 |     rmmovq %rcx, 40(%rsi)
0x330: 6211                 |     andq %rcx,%rcx
0x332: 714503000000000000   |     jle notIncx14
0x33b: c0f00100000000000000 |     iaddq $1,%rax
0x345:                      | notIncx14:
                            | #7
0x345: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x34f: 73bd03000000000000   |     je Done
0x358: 50173000000000000000 |     mrmovq 48(%rdi), %rcx	
0x362: 40163000000000000000 |     rmmovq %rcx, 48(%rsi)
0x36c: 6211                 |     andq %rcx,%rcx
0x36e: 718103000000000000   |     jle notIncx15
0x377: c0f00100000000000000 |     iaddq $1,%rax
0x381:                      | notIncx15:
                            | #8
0x381: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x38b: 73bd03000000000000   |     je Done
0x394: 50173800000000000000 |     mrmovq 56(%rdi), %rcx	
0x39e: 40163800000000000000 |     rmmovq %rcx, 56(%rsi)
0x3a8: 6211                 |     andq %rcx,%rcx
0x3aa: 71bd03000000000000   |     jle Done
0x3b3: c0f00100000000000000 |     iaddq $1,%rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3bd:                      | Done:
0x3bd: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3be:                      | End:
                            | #/* $end ncopy-ys */
0x3be:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3c0:                      | 	.align 8
0x3c0:                      | src:
0x3c0: ffffffffffffffff     | 	.quad -1
0x3c8: feffffffffffffff     | 	.quad -2
0x3d0: fdffffffffffffff     | 	.quad -3
0x3d8: 0400000000000000     | 	.quad 4
0x3e0: fbffffffffffffff     | 	.quad -5
0x3e8: faffffffffffffff     | 	.quad -6
0x3f0: 0700000000000000     | 	.quad 7
0x3f8: 0800000000000000     | 	.quad 8
0x400: f7ffffffffffffff     | 	.quad -9
0x408: 0a00000000000000     | 	.quad 10
0x410: 0b00000000000000     | 	.quad 11
0x418: 0c00000000000000     | 	.quad 12
0x420: 0d00000000000000     | 	.quad 13
0x428: 0e00000000000000     | 	.quad 14
0x430: 0f00000000000000     | 	.quad 15
0x438: f0ffffffffffffff     | 	.quad -16
0x440: 1100000000000000     | 	.quad 17
0x448: eeffffffffffffff     | 	.quad -18
0x450: edffffffffffffff     | 	.quad -19
0x458: 1400000000000000     | 	.quad 20
0x460: 1500000000000000     | 	.quad 21
0x468: eaffffffffffffff     | 	.quad -22
0x470: 1700000000000000     | 	.quad 23
0x478: e8ffffffffffffff     | 	.quad -24
0x480: 1900000000000000     | 	.quad 25
0x488: e6ffffffffffffff     | 	.quad -26
0x490: e5ffffffffffffff     | 	.quad -27
0x498: e4ffffffffffffff     | 	.quad -28
0x4a0: e3ffffffffffffff     | 	.quad -29
0x4a8: e2ffffffffffffff     | 	.quad -30
0x4b0: 1f00000000000000     | 	.quad 31
0x4b8: e0ffffffffffffff     | 	.quad -32
0x4c0: 2100000000000000     | 	.quad 33
0x4c8: 2200000000000000     | 	.quad 34
0x4d0: 2300000000000000     | 	.quad 35
0x4d8: 2400000000000000     | 	.quad 36
0x4e0: 2500000000000000     | 	.quad 37
0x4e8: 2600000000000000     | 	.quad 38
0x4f0: d9ffffffffffffff     | 	.quad -39
0x4f8: d8ffffffffffffff     | 	.quad -40
0x500: 2900000000000000     | 	.quad 41
0x508: 2a00000000000000     | 	.quad 42
0x510: d5ffffffffffffff     | 	.quad -43
0x518: 2c00000000000000     | 	.quad 44
0x520: 2d00000000000000     | 	.quad 45
0x528: d2ffffffffffffff     | 	.quad -46
0x530: d1ffffffffffffff     | 	.quad -47
0x538: 3000000000000000     | 	.quad 48
0x540: 3100000000000000     | 	.quad 49
0x548: ceffffffffffffff     | 	.quad -50
0x550: cdffffffffffffff     | 	.quad -51
0x558: ccffffffffffffff     | 	.quad -52
0x560: 3500000000000000     | 	.quad 53
0x568: 3600000000000000     | 	.quad 54
0x570: 3700000000000000     | 	.quad 55
0x578: c8ffffffffffffff     | 	.quad -56
0x580: c7ffffffffffffff     | 	.quad -57
0x588: 3a00000000000000     | 	.quad 58
0x590: c5ffffffffffffff     | 	.quad -59
0x598: c4ffffffffffffff     | 	.quad -60
0x5a0: c3ffffffffffffff     | 	.quad -61
0x5a8: c2ffffffffffffff     | 	.quad -62
0x5b0: c1ffffffffffffff     | 	.quad -63
0x5b8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x5c0:                      | 	.align 16
0x5c0:                      | Predest:
0x5c0: fadebc0000000000     | 	.quad 0xbcdefa
0x5c8:                      | dest:
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0: abefcd0000000000     | 	.quad 0xcdefab
0x7a8: abefcd0000000000     | 	.quad 0xcdefab
0x7b0: abefcd0000000000     | 	.quad 0xcdefab
0x7b8: abefcd0000000000     | 	.quad 0xcdefab
0x7c0:                      | Postdest:
0x7c0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x7c8:                      | .align 8
                            | # Run time stack
0x7c8: 0000000000000000     | 	.quad 0
0x7d0: 0000000000000000     | 	.quad 0
0x7d8: 0000000000000000     | 	.quad 0
0x7e0: 0000000000000000     | 	.quad 0
0x7e8: 0000000000000000     | 	.quad 0
0x7f0: 0000000000000000     | 	.quad 0
0x7f8: 0000000000000000     | 	.quad 0
0x800: 0000000000000000     | 	.quad 0
0x808: 0000000000000000     | 	.quad 0
0x810: 0000000000000000     | 	.quad 0
0x818: 0000000000000000     | 	.quad 0
0x820: 0000000000000000     | 	.quad 0
0x828: 0000000000000000     | 	.quad 0
0x830: 0000000000000000     | 	.quad 0
0x838: 0000000000000000     | 	.quad 0
0x840: 0000000000000000     | 	.quad 0
                            | 
0x848:                      | Stack:
